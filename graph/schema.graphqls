type Psychologist {
  id: ID!
  name: String!
  description: String
  Courses: [Course]
}

type Course {
  id: ID!
  name: String!
  description: String
  price: Int!
  psychologists: [Psychologist!]!
  lessons: [Lesson!]!
}

type Lesson {
  id: ID!
  name: String!
  number: Int!
  course: Course!
}

type Query {
  psychologist(id: ID!): Psychologist!
  psychologists: [Psychologist!]!
  course(id: ID!): Course!
  courses: [Course!]!
  lesson(id: ID!): Lesson!
  lessons: [Lesson!]!
}

input NewPsychologist {
  name: String!
  description: String
}

input NewCourse {
  name: String!
  description: String
  price: Int!
  psychologists: [ID!]!
}

input NewLesson {
  name: String!
  number: Int!
  course: ID!
}

input Login {
  username: String!
  password: String!
}

input RefreshTokenInput{
  token: String!
}

type Mutation {
  createPsychologist(input: NewPsychologist!): Psychologist!
  createCourse(input: NewCourse!): Course!
  createLesson(input: NewLesson!): Lesson!
  login(input: Login!): String!
  refreshToken(input: RefreshTokenInput!): String!
}
